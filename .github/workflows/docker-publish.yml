name: Docker Build and Publish

on:
  push:
    branches: ["main", "staging", "dev"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io

jobs:
  app:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # Set environment based on branch/event
    environment: ${{ startsWith(github.ref, 'refs/tags/') && 'prod' || github.ref == 'refs/heads/main' && 'stage' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/app
          tags: |
            type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,format=long,enable=${{ github.ref != 'refs/heads/main' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push App Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./packages/app
          file: ./packages/app/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VITE_STREAM_URL=${{ secrets.VITE_STREAM_URL }}
            VITE_POCKETBASE_URL=${{ secrets.VITE_POCKETBASE_URL }}

  panel:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # Set environment based on branch/event
    environment: ${{ startsWith(github.ref, 'refs/tags/') && 'prod' || github.ref == 'refs/heads/main' && 'stage' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/panel
          tags: |
            type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,format=long,enable=${{ github.ref != 'refs/heads/main' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Panel Docker image
        uses: docker/build-push-action@v5
        with:
          # context: ./packages/panel
          file: ./packages/panel/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  joystick:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # Set environment based on branch/event
    environment: ${{ startsWith(github.ref, 'refs/tags/') && 'prod' || github.ref == 'refs/heads/main' && 'stage' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/joystick
          tags: |
            type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,format=long,enable=${{ github.ref != 'refs/heads/main' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Joystick Docker image
        uses: docker/build-push-action@v5
        with:
          # context: ./packages/joystick
          file: ./packages/joystick/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  studio:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # Set environment based on branch/event
    environment: ${{ startsWith(github.ref, 'refs/tags/') && 'prod' || github.ref == 'refs/heads/main' && 'stage' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/studio
          tags: |
            type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,format=long,enable=${{ github.ref != 'refs/heads/main' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Studio Docker image
        uses: docker/build-push-action@v5
        with:
          # context: ./packages/studio
          file: ./packages/studio/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  baker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # Set environment based on branch/event
    environment: ${{ startsWith(github.ref, 'refs/tags/') && 'prod' || github.ref == 'refs/heads/main' && 'stage' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/baker
          tags: |
            type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,format=long,enable=${{ github.ref != 'refs/heads/main' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Baker Docker image
        uses: docker/build-push-action@v5
        with:
          # context: ./packages/baker
          file: ./packages/baker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  switcher:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # Set environment based on branch/event
    environment: ${{ startsWith(github.ref, 'refs/tags/') && 'prod' || github.ref == 'refs/heads/main' && 'stage' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/switcher
          tags: |
            type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,format=long,enable=${{ github.ref != 'refs/heads/main' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Switcher Docker image
        uses: docker/build-push-action@v5
        with:
          # context: ./packages/switcher
          file: ./packages/switcher/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  whisper:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # Set environment based on branch/event
    environment: ${{ startsWith(github.ref, 'refs/tags/') && 'prod' || github.ref == 'refs/heads/main' && 'stage' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/whisper
          tags: |
            type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,format=long,enable=${{ github.ref != 'refs/heads/main' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Whisper Docker image
        uses: docker/build-push-action@v5
        with:
          # context: ./packages/whisper
          file: ./packages/whisper/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  pb:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # Set environment based on branch/event
    environment: ${{ startsWith(github.ref, 'refs/tags/') && 'prod' || github.ref == 'refs/heads/main' && 'stage' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/pb
          tags: |
            type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,format=long,enable=${{ github.ref != 'refs/heads/main' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push PocketBase Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.pocketbase
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
