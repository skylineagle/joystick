services:
  pocketbase:
    image: ghcr.io/muchobien/pocketbase:latest
    restart: unless-stopped
    ports:
      - "8090:8090"
    environment:
      - MEDIAMTX_API=http://mediamtx:9997
      - JOYSTICK_API_URL=http://host.docker.internal:8000
      - JOYSTICK_API_KEY=dev-api-key-12345
    volumes:
      - ./pocketbase/pb_data:/pb_data
      - ./pocketbase/pb_public:/pb_public
      - ./pocketbase/pb_hooks:/pb_hooks
      - ./pocketbase/pb_migrations:/pb_migrations
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8090/api/health || exit 1
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mediamtx:
    image: bluenviron/mediamtx:1.11.2
    restart: unless-stopped
    ports:
      - "9997:9997" # API
      - "8554:8554" # RTSP
      - "8888:8888" # API and metrics
      - "8889:8889" # HLS
      - "1935:1935" # RTMP
    volumes:
      - ./mediamtx/mediamtx.yml:/mediamtx.yml
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  inngest:
    image: inngest/inngest
    command: "inngest start -u http://host.docker.internal:8000/api/inngest"
    ports:
      - "8288:8288"
      - "8289:8289"
    environment:
      - INNGEST_EVENT_KEY=dev
      - INNGEST_SIGNING_KEY=dev
      - INNGEST_POSTGRES_URI=postgres://inngest:password@postgres:5432/inngest
      - INNGEST_REDIS_URI=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:17
    environment:
      - POSTGRES_DB=inngest
      - POSTGRES_USER=inngest
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U inngest -d inngest"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  pb_data:
  postgres_data:
  redis_data:
